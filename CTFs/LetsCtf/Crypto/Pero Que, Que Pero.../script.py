from Crypto.Util.number import bytes_to_long, long_to_bytes
import gmpy2


n = 16647821671554406881230683185019515663829913249181890223100986111768452687369299767787819452612061489098940108003754107357728588494399606657460214454154317899544220336920409530185197443036960772327181369410543813494179811837760437611951596221035192745722379347196174246467459166823540158477922134641359922902996873067365566528635863577445223610565598429086895212023413206155411735752302350753262620678679321907066248956690021672259696692793237987430039296202806810370481355148863744624302934134485667338584403371030030209612936500768430709090636144409857917461690551406517246098201946842522349331449182055819937940161
e = 65537
c = 7199522289153136208755428261091107623867065838592140927460833110620597133888560896444993612730916106924387170276216364340991462936625620226628303862157858239142276411514901974169717483616784579406766448179088368276543899622215922321207863599344063529587575664438357955321139664685038072534328364129592949868419397320137081361742369362115440709690252010578648527658536744009322783688059877670202092481409027763980981988223978223524758031122972799180890746793487518830856340775513479228401369746816529577533379986428013234320858874112147801629915700888395554749938516461170349063882826807649324219390440544289446588416
s = 261562593462916940720275942572998180930932219978177469657044931954037757213846497795141507399772135681952513634929913532700656280768195090989518156641622807361937067645299600551790114941241064020137720031500891606948707665567275851106873137601058020809736577755459263207889935712566987064308672578075945642862

# s = p + q
# n = p * q


p = 109428875247997089849263689667304024747380406167542887853981543029120974213709433207593615868154834843696734330546896003030473205485657654782807081156435759563486502099721891577729980219394175131752117857647968554779217409308474681264621413558318280815733657809509410039153628557060348987797299499637728040691 
q = 152133718214919850871012252905694156183551813810634581803063388924916783000137064587547891531617300838255779304383017529670183075282537436206711075485187047798450565545577708974060134721846888888385602173852923052169490256258801169842251724042739739994002919945949853168736307155506638076511373078438217602171

def decrypt(c : int) -> bytes:
    phi = (p-1)*(q-1)

    d = pow(e, -1, phi)
    plaintext = pow(c, d, n)
    return long_to_bytes(plaintext)

if __name__ == "__main__":
    
    flag = decrypt(c)

    print(f"{flag = }")
                         