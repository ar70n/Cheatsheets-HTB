from Crypto.Util.number import bytes_to_long, long_to_bytes
import gmpy2

N = 15583204234905026297594435935186972279876453487264852451695607595688604849846062647518269748888203646471100856331854568588561291151781038859018998489674824957188936212710734815975543494470854129265598429762577197584148044087541269890631218634584774327853376261509705406795158152858066434672609544336180169435790354336714185549238120372479876259480164644059357542902659773357467416088361144008698607428496303703638798578014511357404155875625565171180676608483961059920882977990580374779307374835900510332448806408712771697102950308323626620321064271201459555773501273071788118775568661551152476099446329575125010071089
M = 384618630021639082352212239849157288139784186283011232466599498804817969854369693727942159247360966668101554655454851207877690607423933242944294445763455736930325273952508288132566249788140764701544644761960674803924723293484442076162482352309442502673008734734169617465010644298893071623720842688449282655039
e = 65537
c = 339889574507266337263792606301413809888727220894469518796631558192809850898549570215635840350260904594924264043962789953530261783856860079336004908916112629240487059206654882095347986568306664647053364139885234378070188874612096619330945497688402764249281606602214556691190483614523563076036267880996565616944834048720621916820523458006093598196675825908901207451430426203400976609326329909223022678139600463065653883961471598537207332180718350157389751927219528354281658334001375086346717046717191084703942921587922468330472291839710424524087991630498720001456604519131740897796772393424393782830358535672264840584




p = 134287531020660917699941720896734680827532227758471833202998482232151463403784469280442812255114947365438104217491255517677047392081693076179210761762969688887687843579223786907820590099440951666785959779516879705097319188710776362270654186277486089520911215035989838659340410702602574550630240678949062285309 
q = 116043567980317246952328798055687926484719730766067566060602534340515043046800755167056534737131071937225346220472340172523595823260547090585872922237516359154949586794060714316925069589258861367972725202926915393730084916062889351621173979754470323631186304662189940146329822893687922522460361330551158084421


def decrypt(c: int) -> bytes:

    phi = (p-1)*(q-1)

    d = pow(e, -1, phi)
    plaintext = pow(c, d, N)
    return long_to_bytes(plaintext)


if __name__ == "__main__":
    
    flag = decrypt(c)

    print(f"{flag = }")
